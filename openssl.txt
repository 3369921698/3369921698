
openssl可以实现：秘钥证书管理、对称加密和非对称加密 。



ssl证书


自动输入

openssl req -newkey rsa:2048 -nodes -keyout vivo.key -x509 -days 365 -out vivo.crt -subj "/C=CN/ST=GD/L=SZ/O=vihoo/OU=dev/CN=vivo.com/emailAddress=yy@vivo.com"
openssl req -newkey rsa:2048 -nodes -keyout fmuat.key -x509 -days 365 -out fmuat.crt -subj "/C=CN/ST=GD/L=GZ/O=fmuat/OU=fmuat/CN=fmuat.com/emailAddress=fmuat@fmuat.com"

cp ./server.crt ./server.pem


手动输入
# 生成服务器端私钥(无加密)
openssl genrsa -out server.key 2048
# 导出服务器端公钥
openssl rsa -in server.key -pubout -out server.crt

# 手动输入一大堆信息 - 生成csr给CA
openssl req -new -key server.key -out server.csr

CN
GuangDong
GuangZhou
GuangZhouBaidu
PHP department
*.fmuat.com
gzbaidu@gz.com



git
putty

ssh-keygen -t rsa -C "3369921698@qq.com"
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

WinSCP
puttygen
--- ssh to putty


git config --global user.name "3369921698"
git config --global user.email "3369921698@qq.com"

git pull origin master:master
git push origin master:master

git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。
$ git pull <远程主机名> <远程分支名>:<本地分支名>

比如，取回 origin 主机的 next 分支，与本地的 master 分支合并，需要写成下面这样。
$ git pull origin next:master

